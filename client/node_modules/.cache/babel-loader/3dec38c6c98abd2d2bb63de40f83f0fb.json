{"ast":null,"code":"import { takeLatest, put, all, call } from 'redux-saga/effects';\nimport UserActionTypes from './user.types';\nimport { auth, googleProvider, CreateUserProfileDocument } from '../../firebase/firebase.utils';\nimport { googleSignInSuccess, googleSignInFailure, emailSignInSuccess, emailSignInFailure } from './user.actions';\nexport function* signInWithGoogle() {\n  try {\n    const {\n      user\n    } = yield auth.signInWithPopup(googleProvider);\n    const userRef = yield call(CreateUserProfileDocument, user);\n    const userSnapshot = yield userRef.get();\n    yield put(googleSignInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (error) {\n    yield put(googleSignInFailure(error));\n  }\n}\nexport function* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.signInWithEmailAndPassword(email, password);\n    const userRef = yield call(CreateUserProfileDocument, user);\n    const userSnapshot = yield userRef.get();\n    yield put(emailSignInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (error) {\n    yield put(emailSignInFailure(error));\n  }\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithGoogle);\n}\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart)]);\n}","map":{"version":3,"sources":["C:/Users/lsaric/luxe-clothing/src/redux/user/user.saga.js"],"names":["takeLatest","put","all","call","UserActionTypes","auth","googleProvider","CreateUserProfileDocument","googleSignInSuccess","googleSignInFailure","emailSignInSuccess","emailSignInFailure","signInWithGoogle","user","signInWithPopup","userRef","userSnapshot","get","id","data","error","signInWithEmail","payload","email","password","signInWithEmailAndPassword","onGoogleSignInStart","GOOGLE_SIGN_IN_START","onEmailSignInStart","EMAIL_SIGN_IN_START","userSagas"],"mappings":"AAAA,SAAQA,UAAR,EAAoBC,GAApB,EAAyBC,GAAzB,EAA8BC,IAA9B,QAAyC,oBAAzC;AACA,OAAOC,eAAP,MAA4B,cAA5B;AACA,SAAQC,IAAR,EAAcC,cAAd,EAA8BC,yBAA9B,QAA8D,+BAA9D;AACA,SAASC,mBAAT,EAA8BC,mBAA9B,EAAmDC,kBAAnD,EAAuEC,kBAAvE,QAAiG,gBAAjG;AAEA,OAAO,UAAUC,gBAAV,GAA4B;AAC/B,MAAG;AACC,UAAM;AAACC,MAAAA;AAAD,QAAS,MAAMR,IAAI,CAACS,eAAL,CAAqBR,cAArB,CAArB;AACA,UAAMS,OAAO,GAAG,MAAMZ,IAAI,CAACI,yBAAD,EAA4BM,IAA5B,CAA1B;AACA,UAAMG,YAAY,GAAG,MAAMD,OAAO,CAACE,GAAR,EAA3B;AAEA,UAAMhB,GAAG,CAACO,mBAAmB,CAAC;AAACU,MAAAA,EAAE,EAAEF,YAAY,CAACE,EAAlB;AAAsB,SAAGF,YAAY,CAACG,IAAb;AAAzB,KAAD,CAApB,CAAT;AAEH,GAPD,CAOE,OAAMC,KAAN,EAAY;AACV,UAAMnB,GAAG,CAACQ,mBAAmB,CAACW,KAAD,CAApB,CAAT;AACH;AACJ;AAED,OAAO,UAAUC,eAAV,CAA0B;AAACC,EAAAA,OAAO,EAAE;AAACC,IAAAA,KAAD;AAAQC,IAAAA;AAAR;AAAV,CAA1B,EAAuD;AAC1D,MAAG;AACC,UAAM;AAACX,MAAAA;AAAD,QAAS,MAAMR,IAAI,CAACoB,0BAAL,CAAgCF,KAAhC,EAAuCC,QAAvC,CAArB;AACA,UAAMT,OAAO,GAAG,MAAMZ,IAAI,CAACI,yBAAD,EAA4BM,IAA5B,CAA1B;AACA,UAAMG,YAAY,GAAG,MAAMD,OAAO,CAACE,GAAR,EAA3B;AAEA,UAAMhB,GAAG,CAACS,kBAAkB,CAAC;AAACQ,MAAAA,EAAE,EAAEF,YAAY,CAACE,EAAlB;AAAsB,SAAGF,YAAY,CAACG,IAAb;AAAzB,KAAD,CAAnB,CAAT;AACH,GAND,CAME,OAAMC,KAAN,EAAY;AACV,UAAMnB,GAAG,CAACU,kBAAkB,CAACS,KAAD,CAAnB,CAAT;AACH;AACJ;AAED,OAAO,UAAUM,mBAAV,GAA+B;AAClC,QAAM1B,UAAU,CAACI,eAAe,CAACuB,oBAAjB,EAAuCf,gBAAvC,CAAhB;AACH;AAED,OAAO,UAAUgB,kBAAV,GAA8B;AACjC,QAAM5B,UAAU,CAACI,eAAe,CAACyB,mBAAjB,EAAsCjB,gBAAtC,CAAhB;AACH;AAED,OAAO,UAAUkB,SAAV,GAAqB;AACxB,QAAM5B,GAAG,CAAC,CAACC,IAAI,CAACuB,mBAAD,CAAL,CAAD,CAAT;AACH","sourcesContent":["import {takeLatest, put, all, call} from 'redux-saga/effects'\r\nimport UserActionTypes from './user.types'\r\nimport {auth, googleProvider, CreateUserProfileDocument} from '../../firebase/firebase.utils'\r\nimport { googleSignInSuccess, googleSignInFailure, emailSignInSuccess, emailSignInFailure } from './user.actions';\r\n\r\nexport function* signInWithGoogle(){\r\n    try{\r\n        const {user} = yield auth.signInWithPopup(googleProvider);\r\n        const userRef = yield call(CreateUserProfileDocument, user);\r\n        const userSnapshot = yield userRef.get();\r\n\r\n        yield put(googleSignInSuccess({id: userSnapshot.id, ...userSnapshot.data()}))\r\n        \r\n    } catch(error){\r\n        yield put(googleSignInFailure(error));\r\n    }\r\n}\r\n\r\nexport function* signInWithEmail({payload: {email, password}}){\r\n    try{\r\n        const {user} = yield auth.signInWithEmailAndPassword(email, password);\r\n        const userRef = yield call(CreateUserProfileDocument, user);\r\n        const userSnapshot = yield userRef.get();\r\n\r\n        yield put(emailSignInSuccess({id: userSnapshot.id, ...userSnapshot.data()}));\r\n    } catch(error){\r\n        yield put(emailSignInFailure(error));\r\n    }\r\n}\r\n\r\nexport function* onGoogleSignInStart(){\r\n    yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle)\r\n}\r\n\r\nexport function* onEmailSignInStart(){\r\n    yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithGoogle)\r\n}\r\n\r\nexport function* userSagas(){\r\n    yield all([call(onGoogleSignInStart)])\r\n}"]},"metadata":{},"sourceType":"module"}